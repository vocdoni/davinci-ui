{
  "name": "davinci-voting-app",
  "description": "DAVINCI Voting App Component Registry",
  "version": "1.0.0",
  "components": [
    {
      "name": "badge",
      "type": "components:ui",
      "dependencies": ["class-variance-authority"],
      "files": ["components/ui/badge.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "foreground": "hsl(var(--foreground))",
                "primary": {
                  "DEFAULT": "hsl(var(--primary))",
                  "foreground": "hsl(var(--primary-foreground))"
                },
                "secondary": {
                  "DEFAULT": "hsl(var(--secondary))",
                  "foreground": "hsl(var(--secondary-foreground))"
                },
                "destructive": {
                  "DEFAULT": "hsl(var(--destructive))",
                  "foreground": "hsl(var(--destructive-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "button",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-slot", "class-variance-authority"],
      "files": ["components/ui/button.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "input": "hsl(var(--input))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "foreground": "hsl(var(--foreground))",
                "primary": {
                  "DEFAULT": "hsl(var(--primary))",
                  "foreground": "hsl(var(--primary-foreground))"
                },
                "secondary": {
                  "DEFAULT": "hsl(var(--secondary))",
                  "foreground": "hsl(var(--secondary-foreground))"
                },
                "destructive": {
                  "DEFAULT": "hsl(var(--destructive))",
                  "foreground": "hsl(var(--destructive-foreground))"
                },
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                },
                "accent": {
                  "DEFAULT": "hsl(var(--accent))",
                  "foreground": "hsl(var(--accent-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "card",
      "type": "components:ui",
      "dependencies": [],
      "files": ["components/ui/card.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "card": {
                  "DEFAULT": "hsl(var(--card))",
                  "foreground": "hsl(var(--card-foreground))"
                },
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "checkbox",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-checkbox", "lucide-react"],
      "files": ["components/ui/checkbox.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "primary": {
                  "DEFAULT": "hsl(var(--primary))",
                  "foreground": "hsl(var(--primary-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "dialog",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-dialog", "lucide-react"],
      "files": ["components/ui/dialog.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "foreground": "hsl(var(--foreground))",
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                },
                "accent": {
                  "DEFAULT": "hsl(var(--accent))",
                  "foreground": "hsl(var(--accent-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "input",
      "type": "components:ui",
      "dependencies": [],
      "files": ["components/ui/input.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "input": "hsl(var(--input))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "foreground": "hsl(var(--foreground))",
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "label",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-label", "class-variance-authority"],
      "files": ["components/ui/label.tsx"]
    },
    {
      "name": "progress",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-progress"],
      "files": ["components/ui/progress.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "secondary": {
                  "DEFAULT": "hsl(var(--secondary))"
                },
                "primary": {
                  "DEFAULT": "hsl(var(--primary))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "radio-group",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-radio-group", "lucide-react"],
      "files": ["components/ui/radio-group.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "primary": {
                  "DEFAULT": "hsl(var(--primary))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "select",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-select", "lucide-react"],
      "files": ["components/ui/select.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "input": "hsl(var(--input))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "foreground": "hsl(var(--foreground))",
                "popover": {
                  "DEFAULT": "hsl(var(--popover))",
                  "foreground": "hsl(var(--popover-foreground))"
                },
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                },
                "accent": {
                  "DEFAULT": "hsl(var(--accent))",
                  "foreground": "hsl(var(--accent-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "separator",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-separator"],
      "files": ["components/ui/separator.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))"
              }
            }
          }
        }
      }
    },
    {
      "name": "table",
      "type": "components:ui",
      "dependencies": [],
      "files": ["components/ui/table.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                },
                "primary": {
                  "DEFAULT": "hsl(var(--primary))",
                  "foreground": "hsl(var(--primary-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "tabs",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-tabs"],
      "files": ["components/ui/tabs.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "foreground": "hsl(var(--foreground))",
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "textarea",
      "type": "components:ui",
      "dependencies": [],
      "files": ["components/ui/textarea.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "input": "hsl(var(--input))",
                "ring": "hsl(var(--ring))",
                "background": "hsl(var(--background))",
                "muted": {
                  "DEFAULT": "hsl(var(--muted))",
                  "foreground": "hsl(var(--muted-foreground))"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "tooltip",
      "type": "components:ui",
      "dependencies": ["@radix-ui/react-tooltip"],
      "files": ["components/ui/tooltip.tsx"],
      "tailwind": {
        "config": {
          "theme": {
            "extend": {
              "colors": {
                "border": "hsl(var(--border))",
                "popover": {
                  "DEFAULT": "hsl(var(--popover))",
                  "foreground": "hsl(var(--popover-foreground))"
                }
              }
            }
          }
        }
      }
    }
  ],
  "customComponents": [
    {
      "name": "create-vote-form",
      "type": "components:custom",
      "description": "Multi-step form for creating decentralized votes with different voting methods",
      "dependencies": [
        "components/ui/card",
        "components/ui/button",
        "components/ui/input",
        "components/ui/label",
        "components/ui/textarea",
        "components/ui/select",
        "components/ui/radio-group",
        "components/ui/separator",
        "components/ui/tooltip",
        "lucide-react",
        "next/navigation"
      ],
      "files": ["components/create-vote-form.tsx"],
      "features": [
        "Single choice voting",
        "Multiple choice voting",
        "Quadratic voting",
        "Census configuration",
        "Duration settings",
        "Real-time validation",
        "Success states"
      ]
    },
    {
      "name": "vote-display",
      "type": "components:custom",
      "description": "Interactive voting interface with real-time results and progress tracking",
      "dependencies": [
        "components/ui/card",
        "components/ui/button",
        "components/ui/badge",
        "components/ui/radio-group",
        "components/ui/label",
        "components/ui/checkbox",
        "components/ui/input",
        "components/voting-modal",
        "components/vote-progress-tracker",
        "lucide-react"
      ],
      "files": ["components/vote-display.tsx"],
      "features": [
        "Wallet connection",
        "Multiple voting methods",
        "Real-time countdown",
        "Results visualization",
        "Progress tracking",
        "Anti-coercion protection"
      ]
    },
    {
      "name": "voting-modal",
      "type": "components:custom",
      "description": "Confirmation modal for vote submission with method-specific messaging",
      "dependencies": ["components/ui/dialog", "components/ui/button", "lucide-react"],
      "files": ["components/voting-modal.tsx"],
      "features": ["Vote confirmation", "Method-specific icons", "Anti-coercion messaging", "Revote support"]
    },
    {
      "name": "vote-progress-tracker",
      "type": "components:custom",
      "description": "Visual progress tracker for vote processing states",
      "dependencies": ["components/ui/card", "components/ui/button", "components/ui/progress", "lucide-react"],
      "files": ["components/vote-progress-tracker.tsx"],
      "features": ["Multi-state progress", "Real-time updates", "Error handling", "Revote capability"]
    },
    {
      "name": "vote-parameters",
      "type": "components:custom",
      "description": "Display component for vote configuration and metadata",
      "dependencies": ["components/ui/card", "components/ui/badge", "lucide-react"],
      "files": ["components/vote-parameters.tsx"],
      "features": ["Vote metadata display", "Real-time status updates", "Creator information", "Timeline tracking"]
    },
    {
      "name": "floating-header",
      "type": "components:custom",
      "description": "Responsive navigation header with DAVINCI branding",
      "dependencies": ["components/ui/button", "components/ui/sheet", "lucide-react", "next/link"],
      "files": ["components/floating-header.tsx"],
      "features": ["Responsive design", "Mobile navigation", "Brand integration", "External links"]
    },
    {
      "name": "davinci-info-card",
      "type": "components:custom",
      "description": "Information card explaining DAVINCI protocol features",
      "dependencies": ["components/ui/card", "components/ui/button", "lucide-react"],
      "files": ["components/davinci-info-card.tsx"],
      "features": ["Protocol explanation", "Feature highlights", "External links", "Responsive layout"]
    }
  ],
  "theme": {
    "cssVars": {
      "--background": "37 40% 97%",
      "--foreground": "0 0% 0%",
      "--card": "37 40% 97%",
      "--card-foreground": "0 0% 0%",
      "--popover": "37 40% 97%",
      "--popover-foreground": "0 0% 0%",
      "--primary": "27 33% 81%",
      "--primary-foreground": "25 31% 18%",
      "--secondary": "144 100% 93%",
      "--secondary-foreground": "25 31% 18%",
      "--muted": "30 25% 75%",
      "--muted-foreground": "25 5% 45%",
      "--accent": "240 67% 87%",
      "--accent-foreground": "25 31% 18%",
      "--destructive": "0 84.2% 60.2%",
      "--destructive-foreground": "210 40% 98%",
      "--border": "147 26% 81%",
      "--input": "30 25% 75%",
      "--ring": "27 33% 81%",
      "--radius": "0.5rem"
    },
    "customColors": {
      "davinci": {
        "paper-base": "#EBD2B2",
        "soft-neutral": "#D6C3A8",
        "black-alt": "#3B2B21",
        "text-base": "#FFFFFF",
        "text-inverse": "#000000",
        "digital-highlight": "#D9FFE5",
        "callout-border": "#C1DFCD",
        "secondary-accent": "#C5C8F7"
      }
    }
  },
  "fonts": {
    "averia": "var(--font-averia-libre)",
    "sans": "var(--font-work-sans)"
  },
  "installation": {
    "dependencies": [
      "@radix-ui/react-checkbox",
      "@radix-ui/react-dialog",
      "@radix-ui/react-label",
      "@radix-ui/react-progress",
      "@radix-ui/react-radio-group",
      "@radix-ui/react-select",
      "@radix-ui/react-separator",
      "@radix-ui/react-slot",
      "@radix-ui/react-tabs",
      "@radix-ui/react-tooltip",
      "class-variance-authority",
      "lucide-react",
      "tailwindcss-animate"
    ],
    "devDependencies": ["tailwindcss", "@types/node", "typescript"]
  },
  "usage": {
    "setup": [
      "1. Install dependencies: npm install",
      "2. Configure Tailwind CSS with the provided config",
      "3. Add CSS variables to your globals.css",
      "4. Import components as needed"
    ],
    "examples": [
      {
        "name": "Basic Vote Creation",
        "code": "import { CreateVoteForm } from '~components/create-vote-form'\n\nexport default function CreateVote() {\n  return <CreateVoteForm />\n}"
      },
      {
        "name": "Vote Display",
        "code": "import { VoteDisplay } from '~components/vote-display'\n\nexport default function Vote({ voteData }) {\n  return <VoteDisplay voteData={voteData} />\n}"
      }
    ]
  }
}
